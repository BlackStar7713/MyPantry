package com.hermanowicz.pantry.activity;

import org.junit.Before;
import androidx.test.core.app.ApplicationProvider;
import org.robolectric.RobolectricTestRunner;
import org.junit.runner.RunWith;
import org.junit.Test;

@RunWith(RobolectricTestRunner.class)
public class Test928 {

    @Before()
    public void setup() {
        org.robolectric.shadows.ShadowSQLiteConnection.reset();
    }

    /**
     * Generated from /scratch/berreiter/action-based-test-carving/apps-src/MyPantry/traces/activities.NewProductActivityTest#addingTheProductShouldNavigateToPrintQRDetailsActivity/Trace-1659559163567.txt
     * Method invocation under test: <com.hermanowicz.pantry.activity.NewProductActivity: void finish()>_2314_4628
     */
    @Test(timeout = 4000)
    public void test_com_hermanowicz_pantry_activity_NewProductActivity_finish_001() throws Exception {
        java.util.Iterator iterator0 = null;
        com.hermanowicz.pantry.activity.NewProductActivity newproductactivity33 = null;
        java.util.Iterator iterator1 = null;
        java.util.Iterator iterator2 = null;
        java.util.Iterator iterator3 = null;
        android.content.Intent intent27 = null;
        java.lang.Object object36 = org.mockito.Mockito.mock(com.hermanowicz.pantry.activity.NewProductActivity$$ExternalSyntheticLambda3.class);
        org.mockito.stubbing.Stubber stubber1816 = org.mockito.Mockito.doNothing();
        java.lang.Object object37 = stubber1816.when(object36);
        object37 = new com.hermanowicz.pantry.activity.NewProductActivity$$ExternalSyntheticLambda3(newproductactivity33);
        org.mockito.stubbing.Stubber stubber1817 = org.mockito.Mockito.doNothing();
        java.lang.Object object38 = stubber1817.when(object36);
        object38 = new java.lang.Object();
        com.hermanowicz.pantry.db.product.Product product919 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber1818 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product920 = stubber1818.when(product919);
        product920 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber1819 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product921 = stubber1819.when(product919);
        product921.setId(3);
        org.mockito.stubbing.Stubber stubber1820 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product922 = stubber1820.when(product919);
        product922.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber1821 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product923 = stubber1821.when(product919);
        product923.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber1822 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product924 = stubber1822.when(product919);
        product924.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber1823 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product925 = stubber1823.when(product919);
        product925.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber1824 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product926 = stubber1824.when(product919);
        product926.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber1825 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product927 = stubber1825.when(product919);
        product927.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber1826 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product928 = stubber1826.when(product919);
        product928.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber1827 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product929 = stubber1827.when(product919);
        product929.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber1828 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product930 = stubber1828.when(product919);
        product930.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber1829 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product931 = stubber1829.when(product919);
        product931.setDosage("Much");
        org.mockito.stubbing.Stubber stubber1830 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product932 = stubber1830.when(product919);
        product932.setVolume(500);
        org.mockito.stubbing.Stubber stubber1831 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product933 = stubber1831.when(product919);
        product933.setWeight(1000);
        org.mockito.stubbing.Stubber stubber1832 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product934 = stubber1832.when(product919);
        product934.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber1833 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product935 = stubber1833.when(product919);
        product935.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber1834 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product936 = stubber1834.when(product919);
        product936.setIsVege(false);
        org.mockito.stubbing.Stubber stubber1835 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product937 = stubber1835.when(product919);
        product937.setIsBio(false);
        org.mockito.stubbing.Stubber stubber1836 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product938 = stubber1836.when(product919);
        product938.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber1837 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product939 = stubber1837.when(product919);
        product939.setPhotoName("");
        org.mockito.stubbing.Stubber stubber1838 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product940 = stubber1838.when(product919);
        product940.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber1839 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product941 = stubber1839.when(product919);
        product941.setBarcode("");
        org.mockito.stubbing.Stubber stubber1840 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product942 = stubber1840.when(product919);
        product942.getName();
        org.mockito.stubbing.Stubber stubber1841 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product943 = stubber1841.when(product919);
        product943.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber1842 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product944 = stubber1842.when(product919);
        product944.getProductFeatures();
        org.mockito.stubbing.Stubber stubber1843 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product945 = stubber1843.when(product919);
        product945.getExpirationDate();
        org.mockito.stubbing.Stubber stubber1844 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product946 = stubber1844.when(product919);
        product946.getProductionDate();
        org.mockito.stubbing.Stubber stubber1845 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product947 = stubber1845.when(product919);
        product947.getHealingProperties();
        org.mockito.stubbing.Stubber stubber1846 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product948 = stubber1846.when(product919);
        product948.getComposition();
        org.mockito.stubbing.Stubber stubber1847 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product949 = stubber1847.when(product919);
        product949.getDosage();
        org.mockito.stubbing.Stubber stubber1848 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product950 = stubber1848.when(product919);
        product950.getBarcode();
        org.mockito.stubbing.Stubber stubber1849 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product951 = stubber1849.when(product919);
        product951.getWeight();
        org.mockito.stubbing.Stubber stubber1850 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product952 = stubber1850.when(product919);
        product952.getVolume();
        org.mockito.stubbing.Stubber stubber1851 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product953 = stubber1851.when(product919);
        product953.getHasSugar();
        org.mockito.stubbing.Stubber stubber1852 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product954 = stubber1852.when(product919);
        product954.getHasSalt();
        org.mockito.stubbing.Stubber stubber1853 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product955 = stubber1853.when(product919);
        product955.getIsVege();
        org.mockito.stubbing.Stubber stubber1854 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product956 = stubber1854.when(product919);
        product956.getIsBio();
        org.mockito.stubbing.Stubber stubber1855 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product957 = stubber1855.when(product919);
        product957.getTaste();
        org.mockito.stubbing.Stubber stubber1856 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product958 = stubber1856.when(product919);
        product958.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product959 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber1857 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product960 = stubber1857.when(product959);
        product960 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber1858 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product961 = stubber1858.when(product959);
        product961.setId(4);
        org.mockito.stubbing.Stubber stubber1859 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product962 = stubber1859.when(product959);
        product962.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber1860 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product963 = stubber1860.when(product959);
        product963.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber1861 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product964 = stubber1861.when(product959);
        product964.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber1862 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product965 = stubber1862.when(product959);
        product965.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber1863 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product966 = stubber1863.when(product959);
        product966.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber1864 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product967 = stubber1864.when(product959);
        product967.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber1865 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product968 = stubber1865.when(product959);
        product968.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber1866 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product969 = stubber1866.when(product959);
        product969.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber1867 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product970 = stubber1867.when(product959);
        product970.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber1868 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product971 = stubber1868.when(product959);
        product971.setDosage("Much");
        org.mockito.stubbing.Stubber stubber1869 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product972 = stubber1869.when(product959);
        product972.setVolume(500);
        org.mockito.stubbing.Stubber stubber1870 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product973 = stubber1870.when(product959);
        product973.setWeight(1000);
        org.mockito.stubbing.Stubber stubber1871 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product974 = stubber1871.when(product959);
        product974.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber1872 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product975 = stubber1872.when(product959);
        product975.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber1873 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product976 = stubber1873.when(product959);
        product976.setIsVege(false);
        org.mockito.stubbing.Stubber stubber1874 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product977 = stubber1874.when(product959);
        product977.setIsBio(false);
        org.mockito.stubbing.Stubber stubber1875 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product978 = stubber1875.when(product959);
        product978.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber1876 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product979 = stubber1876.when(product959);
        product979.setPhotoName("");
        org.mockito.stubbing.Stubber stubber1877 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product980 = stubber1877.when(product959);
        product980.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber1878 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product981 = stubber1878.when(product959);
        product981.setBarcode("");
        org.mockito.stubbing.Stubber stubber1879 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product982 = stubber1879.when(product959);
        product982.getName();
        org.mockito.stubbing.Stubber stubber1880 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product983 = stubber1880.when(product959);
        product983.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber1881 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product984 = stubber1881.when(product959);
        product984.getProductFeatures();
        org.mockito.stubbing.Stubber stubber1882 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product985 = stubber1882.when(product959);
        product985.getExpirationDate();
        org.mockito.stubbing.Stubber stubber1883 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product986 = stubber1883.when(product959);
        product986.getProductionDate();
        org.mockito.stubbing.Stubber stubber1884 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product987 = stubber1884.when(product959);
        product987.getHealingProperties();
        org.mockito.stubbing.Stubber stubber1885 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product988 = stubber1885.when(product959);
        product988.getComposition();
        org.mockito.stubbing.Stubber stubber1886 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product989 = stubber1886.when(product959);
        product989.getDosage();
        org.mockito.stubbing.Stubber stubber1887 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product990 = stubber1887.when(product959);
        product990.getBarcode();
        org.mockito.stubbing.Stubber stubber1888 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product991 = stubber1888.when(product959);
        product991.getWeight();
        org.mockito.stubbing.Stubber stubber1889 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product992 = stubber1889.when(product959);
        product992.getVolume();
        org.mockito.stubbing.Stubber stubber1890 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product993 = stubber1890.when(product959);
        product993.getHasSugar();
        org.mockito.stubbing.Stubber stubber1891 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product994 = stubber1891.when(product959);
        product994.getHasSalt();
        org.mockito.stubbing.Stubber stubber1892 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product995 = stubber1892.when(product959);
        product995.getIsVege();
        org.mockito.stubbing.Stubber stubber1893 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product996 = stubber1893.when(product959);
        product996.getIsBio();
        org.mockito.stubbing.Stubber stubber1894 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product997 = stubber1894.when(product959);
        product997.getTaste();
        org.mockito.stubbing.Stubber stubber1895 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product998 = stubber1895.when(product959);
        product998.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product999 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber1896 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1000 = stubber1896.when(product999);
        product1000 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber1897 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1001 = stubber1897.when(product999);
        product1001.setId(1);
        org.mockito.stubbing.Stubber stubber1898 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1002 = stubber1898.when(product999);
        product1002.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber1899 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1003 = stubber1899.when(product999);
        product1003.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber1900 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1004 = stubber1900.when(product999);
        product1004.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber1901 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1005 = stubber1901.when(product999);
        product1005.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber1902 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1006 = stubber1902.when(product999);
        product1006.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber1903 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1007 = stubber1903.when(product999);
        product1007.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber1904 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1008 = stubber1904.when(product999);
        product1008.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber1905 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1009 = stubber1905.when(product999);
        product1009.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber1906 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1010 = stubber1906.when(product999);
        product1010.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber1907 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1011 = stubber1907.when(product999);
        product1011.setDosage("Much");
        org.mockito.stubbing.Stubber stubber1908 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1012 = stubber1908.when(product999);
        product1012.setVolume(500);
        org.mockito.stubbing.Stubber stubber1909 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1013 = stubber1909.when(product999);
        product1013.setWeight(1000);
        org.mockito.stubbing.Stubber stubber1910 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1014 = stubber1910.when(product999);
        product1014.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber1911 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1015 = stubber1911.when(product999);
        product1015.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber1912 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1016 = stubber1912.when(product999);
        product1016.setIsVege(false);
        org.mockito.stubbing.Stubber stubber1913 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1017 = stubber1913.when(product999);
        product1017.setIsBio(false);
        org.mockito.stubbing.Stubber stubber1914 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1018 = stubber1914.when(product999);
        product1018.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber1915 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1019 = stubber1915.when(product999);
        product1019.setPhotoName("");
        org.mockito.stubbing.Stubber stubber1916 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1020 = stubber1916.when(product999);
        product1020.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber1917 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1021 = stubber1917.when(product999);
        product1021.setBarcode("");
        org.mockito.stubbing.Stubber stubber1918 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1022 = stubber1918.when(product999);
        product1022.getName();
        org.mockito.stubbing.Stubber stubber1919 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1023 = stubber1919.when(product999);
        product1023.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber1920 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1024 = stubber1920.when(product999);
        product1024.getProductFeatures();
        org.mockito.stubbing.Stubber stubber1921 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1025 = stubber1921.when(product999);
        product1025.getExpirationDate();
        org.mockito.stubbing.Stubber stubber1922 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1026 = stubber1922.when(product999);
        product1026.getProductionDate();
        org.mockito.stubbing.Stubber stubber1923 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1027 = stubber1923.when(product999);
        product1027.getHealingProperties();
        org.mockito.stubbing.Stubber stubber1924 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1028 = stubber1924.when(product999);
        product1028.getComposition();
        org.mockito.stubbing.Stubber stubber1925 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1029 = stubber1925.when(product999);
        product1029.getDosage();
        org.mockito.stubbing.Stubber stubber1926 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1030 = stubber1926.when(product999);
        product1030.getBarcode();
        org.mockito.stubbing.Stubber stubber1927 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1031 = stubber1927.when(product999);
        product1031.getWeight();
        org.mockito.stubbing.Stubber stubber1928 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1032 = stubber1928.when(product999);
        product1032.getVolume();
        org.mockito.stubbing.Stubber stubber1929 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1033 = stubber1929.when(product999);
        product1033.getHasSugar();
        org.mockito.stubbing.Stubber stubber1930 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1034 = stubber1930.when(product999);
        product1034.getHasSalt();
        org.mockito.stubbing.Stubber stubber1931 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1035 = stubber1931.when(product999);
        product1035.getIsVege();
        org.mockito.stubbing.Stubber stubber1932 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1036 = stubber1932.when(product999);
        product1036.getIsBio();
        org.mockito.stubbing.Stubber stubber1933 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1037 = stubber1933.when(product999);
        product1037.getTaste();
        org.mockito.stubbing.Stubber stubber1934 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1038 = stubber1934.when(product999);
        product1038.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product1039 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber1935 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1040 = stubber1935.when(product1039);
        product1040 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber1936 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1041 = stubber1936.when(product1039);
        product1041.setId(2);
        org.mockito.stubbing.Stubber stubber1937 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1042 = stubber1937.when(product1039);
        product1042.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber1938 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1043 = stubber1938.when(product1039);
        product1043.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber1939 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1044 = stubber1939.when(product1039);
        product1044.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber1940 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1045 = stubber1940.when(product1039);
        product1045.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber1941 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1046 = stubber1941.when(product1039);
        product1046.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber1942 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1047 = stubber1942.when(product1039);
        product1047.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber1943 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1048 = stubber1943.when(product1039);
        product1048.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber1944 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1049 = stubber1944.when(product1039);
        product1049.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber1945 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1050 = stubber1945.when(product1039);
        product1050.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber1946 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1051 = stubber1946.when(product1039);
        product1051.setDosage("Much");
        org.mockito.stubbing.Stubber stubber1947 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1052 = stubber1947.when(product1039);
        product1052.setVolume(500);
        org.mockito.stubbing.Stubber stubber1948 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1053 = stubber1948.when(product1039);
        product1053.setWeight(1000);
        org.mockito.stubbing.Stubber stubber1949 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1054 = stubber1949.when(product1039);
        product1054.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber1950 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1055 = stubber1950.when(product1039);
        product1055.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber1951 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1056 = stubber1951.when(product1039);
        product1056.setIsVege(false);
        org.mockito.stubbing.Stubber stubber1952 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1057 = stubber1952.when(product1039);
        product1057.setIsBio(false);
        org.mockito.stubbing.Stubber stubber1953 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1058 = stubber1953.when(product1039);
        product1058.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber1954 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1059 = stubber1954.when(product1039);
        product1059.setPhotoName("");
        org.mockito.stubbing.Stubber stubber1955 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1060 = stubber1955.when(product1039);
        product1060.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber1956 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1061 = stubber1956.when(product1039);
        product1061.setBarcode("");
        org.mockito.stubbing.Stubber stubber1957 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1062 = stubber1957.when(product1039);
        product1062.getName();
        org.mockito.stubbing.Stubber stubber1958 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1063 = stubber1958.when(product1039);
        product1063.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber1959 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1064 = stubber1959.when(product1039);
        product1064.getProductFeatures();
        org.mockito.stubbing.Stubber stubber1960 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1065 = stubber1960.when(product1039);
        product1065.getExpirationDate();
        org.mockito.stubbing.Stubber stubber1961 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1066 = stubber1961.when(product1039);
        product1066.getProductionDate();
        org.mockito.stubbing.Stubber stubber1962 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1067 = stubber1962.when(product1039);
        product1067.getHealingProperties();
        org.mockito.stubbing.Stubber stubber1963 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1068 = stubber1963.when(product1039);
        product1068.getComposition();
        org.mockito.stubbing.Stubber stubber1964 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1069 = stubber1964.when(product1039);
        product1069.getDosage();
        org.mockito.stubbing.Stubber stubber1965 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1070 = stubber1965.when(product1039);
        product1070.getBarcode();
        org.mockito.stubbing.Stubber stubber1966 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1071 = stubber1966.when(product1039);
        product1071.getWeight();
        org.mockito.stubbing.Stubber stubber1967 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1072 = stubber1967.when(product1039);
        product1072.getVolume();
        org.mockito.stubbing.Stubber stubber1968 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1073 = stubber1968.when(product1039);
        product1073.getHasSugar();
        org.mockito.stubbing.Stubber stubber1969 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1074 = stubber1969.when(product1039);
        product1074.getHasSalt();
        org.mockito.stubbing.Stubber stubber1970 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1075 = stubber1970.when(product1039);
        product1075.getIsVege();
        org.mockito.stubbing.Stubber stubber1971 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1076 = stubber1971.when(product1039);
        product1076.getIsBio();
        org.mockito.stubbing.Stubber stubber1972 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1077 = stubber1972.when(product1039);
        product1077.getTaste();
        org.mockito.stubbing.Stubber stubber1973 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1078 = stubber1973.when(product1039);
        product1078.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product1079 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber1974 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1080 = stubber1974.when(product1079);
        product1080 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber1975 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1081 = stubber1975.when(product1079);
        product1081.setId(5);
        org.mockito.stubbing.Stubber stubber1976 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1082 = stubber1976.when(product1079);
        product1082.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber1977 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1083 = stubber1977.when(product1079);
        product1083.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber1978 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1084 = stubber1978.when(product1079);
        product1084.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber1979 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1085 = stubber1979.when(product1079);
        product1085.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber1980 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1086 = stubber1980.when(product1079);
        product1086.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber1981 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1087 = stubber1981.when(product1079);
        product1087.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber1982 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1088 = stubber1982.when(product1079);
        product1088.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber1983 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1089 = stubber1983.when(product1079);
        product1089.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber1984 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1090 = stubber1984.when(product1079);
        product1090.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber1985 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1091 = stubber1985.when(product1079);
        product1091.setDosage("Much");
        org.mockito.stubbing.Stubber stubber1986 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1092 = stubber1986.when(product1079);
        product1092.setVolume(500);
        org.mockito.stubbing.Stubber stubber1987 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1093 = stubber1987.when(product1079);
        product1093.setWeight(1000);
        org.mockito.stubbing.Stubber stubber1988 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1094 = stubber1988.when(product1079);
        product1094.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber1989 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1095 = stubber1989.when(product1079);
        product1095.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber1990 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1096 = stubber1990.when(product1079);
        product1096.setIsVege(false);
        org.mockito.stubbing.Stubber stubber1991 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1097 = stubber1991.when(product1079);
        product1097.setIsBio(false);
        org.mockito.stubbing.Stubber stubber1992 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1098 = stubber1992.when(product1079);
        product1098.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber1993 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1099 = stubber1993.when(product1079);
        product1099.setPhotoName("");
        org.mockito.stubbing.Stubber stubber1994 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1100 = stubber1994.when(product1079);
        product1100.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber1995 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1101 = stubber1995.when(product1079);
        product1101.setBarcode("");
        org.mockito.stubbing.Stubber stubber1996 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1102 = stubber1996.when(product1079);
        product1102.getName();
        org.mockito.stubbing.Stubber stubber1997 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1103 = stubber1997.when(product1079);
        product1103.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber1998 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1104 = stubber1998.when(product1079);
        product1104.getProductFeatures();
        org.mockito.stubbing.Stubber stubber1999 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1105 = stubber1999.when(product1079);
        product1105.getExpirationDate();
        org.mockito.stubbing.Stubber stubber2000 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1106 = stubber2000.when(product1079);
        product1106.getProductionDate();
        org.mockito.stubbing.Stubber stubber2001 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1107 = stubber2001.when(product1079);
        product1107.getHealingProperties();
        org.mockito.stubbing.Stubber stubber2002 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1108 = stubber2002.when(product1079);
        product1108.getComposition();
        org.mockito.stubbing.Stubber stubber2003 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1109 = stubber2003.when(product1079);
        product1109.getDosage();
        org.mockito.stubbing.Stubber stubber2004 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1110 = stubber2004.when(product1079);
        product1110.getBarcode();
        org.mockito.stubbing.Stubber stubber2005 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1111 = stubber2005.when(product1079);
        product1111.getWeight();
        org.mockito.stubbing.Stubber stubber2006 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1112 = stubber2006.when(product1079);
        product1112.getVolume();
        org.mockito.stubbing.Stubber stubber2007 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1113 = stubber2007.when(product1079);
        product1113.getHasSugar();
        org.mockito.stubbing.Stubber stubber2008 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1114 = stubber2008.when(product1079);
        product1114.getHasSalt();
        org.mockito.stubbing.Stubber stubber2009 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1115 = stubber2009.when(product1079);
        product1115.getIsVege();
        org.mockito.stubbing.Stubber stubber2010 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1116 = stubber2010.when(product1079);
        product1116.getIsBio();
        org.mockito.stubbing.Stubber stubber2011 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1117 = stubber2011.when(product1079);
        product1117.getTaste();
        org.mockito.stubbing.Stubber stubber2012 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1118 = stubber2012.when(product1079);
        product1118.getStorageLocation();
        java.util.ArrayList arraylist67 = org.mockito.Mockito.mock(java.util.ArrayList.class);
        org.mockito.stubbing.Stubber stubber2013 = org.mockito.Mockito.doNothing();
        java.util.ArrayList arraylist68 = stubber2013.when(arraylist67);
        arraylist68 = new java.util.ArrayList(0);
        org.mockito.stubbing.Stubber stubber2014 = org.mockito.Mockito.doReturn(0);
        java.util.ArrayList arraylist69 = stubber2014.when(arraylist67);
        arraylist69.size();
        java.util.ArrayList arraylist70 = org.mockito.Mockito.mock(java.util.ArrayList.class);
        org.mockito.stubbing.Stubber stubber2015 = org.mockito.Mockito.doNothing();
        java.util.ArrayList arraylist71 = stubber2015.when(arraylist70);
        arraylist71 = new java.util.ArrayList();
        org.mockito.stubbing.Stubber stubber2016 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist72 = stubber2016.when(arraylist70);
        arraylist72.add(product1038);
        org.mockito.stubbing.Stubber stubber2017 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist73 = stubber2017.when(arraylist70);
        arraylist73.add(product1078);
        org.mockito.stubbing.Stubber stubber2018 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist74 = stubber2018.when(arraylist70);
        arraylist74.add(product958);
        org.mockito.stubbing.Stubber stubber2019 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist75 = stubber2019.when(arraylist70);
        arraylist75.add(product998);
        org.mockito.stubbing.Stubber stubber2020 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist76 = stubber2020.when(arraylist70);
        arraylist76.add(product1118);
        org.mockito.stubbing.Stubber stubber2021 = org.mockito.Mockito.doReturn(iterator1);
        java.util.ArrayList arraylist77 = stubber2021.when(arraylist70);
        arraylist77.iterator();
        org.mockito.stubbing.Stubber stubber2022 = org.mockito.Mockito.doReturn(iterator2);
        java.util.ArrayList arraylist78 = stubber2022.when(arraylist70);
        arraylist78.iterator();
        org.mockito.stubbing.Stubber stubber2023 = org.mockito.Mockito.doReturn(iterator3);
        java.util.ArrayList arraylist79 = stubber2023.when(arraylist70);
        arraylist79.iterator();
        org.mockito.stubbing.Stubber stubber2024 = org.mockito.Mockito.doReturn(iterator0);
        java.util.ArrayList arraylist80 = stubber2024.when(arraylist70);
        arraylist80.iterator();
        androidx.appcompat.widget.AppCompatButton appcompatbutton8 = org.mockito.Mockito.mock(androidx.appcompat.widget.AppCompatButton.class);
        org.mockito.stubbing.Stubber stubber2025 = org.mockito.Mockito.doNothing();
        androidx.appcompat.widget.AppCompatButton appcompatbutton9 = stubber2025.when(appcompatbutton8);
        appcompatbutton9.setOnClickListener(object38);
        org.robolectric.android.controller.ActivityController activitycontroller75 = org.robolectric.Robolectric.buildActivity(com.hermanowicz.pantry.activity.NewProductActivity.class, intent27);
        com.hermanowicz.pantry.activity.NewProductActivity newproductactivity34 = (com.hermanowicz.pantry.activity.NewProductActivity) activitycontroller75.get();
        org.robolectric.android.controller.ActivityController activitycontroller76 = activitycontroller75.create();
        org.robolectric.android.controller.ActivityController activitycontroller77 = activitycontroller76.resume();
        org.robolectric.android.controller.ActivityController activitycontroller78 = activitycontroller77.visible();
        newproductactivity34.lambda$setListeners$0$com-hermanowicz-pantry-activity-NewProductActivity(appcompatbutton9);
        activitycontroller78.pause();
        arraylist69.size();
        arraylist80.iterator();
        arraylist80.iterator();
        arraylist80.iterator();
        arraylist80.iterator();
        newproductactivity34.finish();
    }
}

package com.hermanowicz.pantry.activity;

import org.junit.Before;
import androidx.test.core.app.ApplicationProvider;
import org.robolectric.RobolectricTestRunner;
import org.junit.runner.RunWith;
import org.junit.Test;

@RunWith(RobolectricTestRunner.class)
public class Test929 {

    @Before()
    public void setup() {
        org.robolectric.shadows.ShadowSQLiteConnection.reset();
    }

    /**
     * Generated from /scratch/berreiter/action-based-test-carving/apps-src/MyPantry/traces/activities.NewProductActivityTest#addingTheProductShouldNavigateToPrintQRDetailsActivity/Trace-1659559163567.txt
     * Method invocation under test: <com.hermanowicz.pantry.activity.NewProductActivity: void onDestroy()>_2317_4634
     */
    @Test(timeout = 4000)
    public void test_com_hermanowicz_pantry_activity_NewProductActivity_onDestroy_001() throws Exception {
        java.util.Iterator iterator8 = null;
        com.hermanowicz.pantry.activity.NewProductActivity newproductactivity35 = null;
        java.util.Iterator iterator9 = null;
        java.util.Iterator iterator10 = null;
        java.util.Iterator iterator11 = null;
        android.content.Intent intent28 = null;
        java.lang.Object object42 = org.mockito.Mockito.mock(com.hermanowicz.pantry.activity.NewProductActivity$$ExternalSyntheticLambda3.class);
        org.mockito.stubbing.Stubber stubber2236 = org.mockito.Mockito.doNothing();
        java.lang.Object object43 = stubber2236.when(object42);
        object43 = new com.hermanowicz.pantry.activity.NewProductActivity$$ExternalSyntheticLambda3(newproductactivity35);
        org.mockito.stubbing.Stubber stubber2237 = org.mockito.Mockito.doNothing();
        java.lang.Object object44 = stubber2237.when(object42);
        object44 = new java.lang.Object();
        com.hermanowicz.pantry.db.product.Product product1319 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber2238 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1320 = stubber2238.when(product1319);
        product1320 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber2239 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1321 = stubber2239.when(product1319);
        product1321.setId(3);
        org.mockito.stubbing.Stubber stubber2240 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1322 = stubber2240.when(product1319);
        product1322.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber2241 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1323 = stubber2241.when(product1319);
        product1323.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber2242 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1324 = stubber2242.when(product1319);
        product1324.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber2243 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1325 = stubber2243.when(product1319);
        product1325.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber2244 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1326 = stubber2244.when(product1319);
        product1326.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber2245 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1327 = stubber2245.when(product1319);
        product1327.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber2246 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1328 = stubber2246.when(product1319);
        product1328.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber2247 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1329 = stubber2247.when(product1319);
        product1329.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber2248 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1330 = stubber2248.when(product1319);
        product1330.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber2249 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1331 = stubber2249.when(product1319);
        product1331.setDosage("Much");
        org.mockito.stubbing.Stubber stubber2250 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1332 = stubber2250.when(product1319);
        product1332.setVolume(500);
        org.mockito.stubbing.Stubber stubber2251 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1333 = stubber2251.when(product1319);
        product1333.setWeight(1000);
        org.mockito.stubbing.Stubber stubber2252 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1334 = stubber2252.when(product1319);
        product1334.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber2253 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1335 = stubber2253.when(product1319);
        product1335.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber2254 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1336 = stubber2254.when(product1319);
        product1336.setIsVege(false);
        org.mockito.stubbing.Stubber stubber2255 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1337 = stubber2255.when(product1319);
        product1337.setIsBio(false);
        org.mockito.stubbing.Stubber stubber2256 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1338 = stubber2256.when(product1319);
        product1338.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber2257 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1339 = stubber2257.when(product1319);
        product1339.setPhotoName("");
        org.mockito.stubbing.Stubber stubber2258 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1340 = stubber2258.when(product1319);
        product1340.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber2259 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1341 = stubber2259.when(product1319);
        product1341.setBarcode("");
        org.mockito.stubbing.Stubber stubber2260 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1342 = stubber2260.when(product1319);
        product1342.getName();
        org.mockito.stubbing.Stubber stubber2261 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1343 = stubber2261.when(product1319);
        product1343.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber2262 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1344 = stubber2262.when(product1319);
        product1344.getProductFeatures();
        org.mockito.stubbing.Stubber stubber2263 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1345 = stubber2263.when(product1319);
        product1345.getExpirationDate();
        org.mockito.stubbing.Stubber stubber2264 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1346 = stubber2264.when(product1319);
        product1346.getProductionDate();
        org.mockito.stubbing.Stubber stubber2265 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1347 = stubber2265.when(product1319);
        product1347.getHealingProperties();
        org.mockito.stubbing.Stubber stubber2266 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1348 = stubber2266.when(product1319);
        product1348.getComposition();
        org.mockito.stubbing.Stubber stubber2267 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1349 = stubber2267.when(product1319);
        product1349.getDosage();
        org.mockito.stubbing.Stubber stubber2268 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1350 = stubber2268.when(product1319);
        product1350.getBarcode();
        org.mockito.stubbing.Stubber stubber2269 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1351 = stubber2269.when(product1319);
        product1351.getWeight();
        org.mockito.stubbing.Stubber stubber2270 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1352 = stubber2270.when(product1319);
        product1352.getVolume();
        org.mockito.stubbing.Stubber stubber2271 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1353 = stubber2271.when(product1319);
        product1353.getHasSugar();
        org.mockito.stubbing.Stubber stubber2272 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1354 = stubber2272.when(product1319);
        product1354.getHasSalt();
        org.mockito.stubbing.Stubber stubber2273 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1355 = stubber2273.when(product1319);
        product1355.getIsVege();
        org.mockito.stubbing.Stubber stubber2274 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1356 = stubber2274.when(product1319);
        product1356.getIsBio();
        org.mockito.stubbing.Stubber stubber2275 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1357 = stubber2275.when(product1319);
        product1357.getTaste();
        org.mockito.stubbing.Stubber stubber2276 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1358 = stubber2276.when(product1319);
        product1358.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product1359 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber2277 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1360 = stubber2277.when(product1359);
        product1360 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber2278 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1361 = stubber2278.when(product1359);
        product1361.setId(4);
        org.mockito.stubbing.Stubber stubber2279 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1362 = stubber2279.when(product1359);
        product1362.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber2280 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1363 = stubber2280.when(product1359);
        product1363.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber2281 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1364 = stubber2281.when(product1359);
        product1364.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber2282 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1365 = stubber2282.when(product1359);
        product1365.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber2283 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1366 = stubber2283.when(product1359);
        product1366.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber2284 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1367 = stubber2284.when(product1359);
        product1367.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber2285 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1368 = stubber2285.when(product1359);
        product1368.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber2286 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1369 = stubber2286.when(product1359);
        product1369.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber2287 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1370 = stubber2287.when(product1359);
        product1370.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber2288 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1371 = stubber2288.when(product1359);
        product1371.setDosage("Much");
        org.mockito.stubbing.Stubber stubber2289 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1372 = stubber2289.when(product1359);
        product1372.setVolume(500);
        org.mockito.stubbing.Stubber stubber2290 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1373 = stubber2290.when(product1359);
        product1373.setWeight(1000);
        org.mockito.stubbing.Stubber stubber2291 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1374 = stubber2291.when(product1359);
        product1374.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber2292 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1375 = stubber2292.when(product1359);
        product1375.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber2293 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1376 = stubber2293.when(product1359);
        product1376.setIsVege(false);
        org.mockito.stubbing.Stubber stubber2294 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1377 = stubber2294.when(product1359);
        product1377.setIsBio(false);
        org.mockito.stubbing.Stubber stubber2295 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1378 = stubber2295.when(product1359);
        product1378.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber2296 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1379 = stubber2296.when(product1359);
        product1379.setPhotoName("");
        org.mockito.stubbing.Stubber stubber2297 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1380 = stubber2297.when(product1359);
        product1380.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber2298 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1381 = stubber2298.when(product1359);
        product1381.setBarcode("");
        org.mockito.stubbing.Stubber stubber2299 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1382 = stubber2299.when(product1359);
        product1382.getName();
        org.mockito.stubbing.Stubber stubber2300 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1383 = stubber2300.when(product1359);
        product1383.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber2301 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1384 = stubber2301.when(product1359);
        product1384.getProductFeatures();
        org.mockito.stubbing.Stubber stubber2302 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1385 = stubber2302.when(product1359);
        product1385.getExpirationDate();
        org.mockito.stubbing.Stubber stubber2303 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1386 = stubber2303.when(product1359);
        product1386.getProductionDate();
        org.mockito.stubbing.Stubber stubber2304 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1387 = stubber2304.when(product1359);
        product1387.getHealingProperties();
        org.mockito.stubbing.Stubber stubber2305 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1388 = stubber2305.when(product1359);
        product1388.getComposition();
        org.mockito.stubbing.Stubber stubber2306 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1389 = stubber2306.when(product1359);
        product1389.getDosage();
        org.mockito.stubbing.Stubber stubber2307 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1390 = stubber2307.when(product1359);
        product1390.getBarcode();
        org.mockito.stubbing.Stubber stubber2308 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1391 = stubber2308.when(product1359);
        product1391.getWeight();
        org.mockito.stubbing.Stubber stubber2309 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1392 = stubber2309.when(product1359);
        product1392.getVolume();
        org.mockito.stubbing.Stubber stubber2310 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1393 = stubber2310.when(product1359);
        product1393.getHasSugar();
        org.mockito.stubbing.Stubber stubber2311 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1394 = stubber2311.when(product1359);
        product1394.getHasSalt();
        org.mockito.stubbing.Stubber stubber2312 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1395 = stubber2312.when(product1359);
        product1395.getIsVege();
        org.mockito.stubbing.Stubber stubber2313 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1396 = stubber2313.when(product1359);
        product1396.getIsBio();
        org.mockito.stubbing.Stubber stubber2314 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1397 = stubber2314.when(product1359);
        product1397.getTaste();
        org.mockito.stubbing.Stubber stubber2315 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1398 = stubber2315.when(product1359);
        product1398.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product1399 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber2316 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1400 = stubber2316.when(product1399);
        product1400 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber2317 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1401 = stubber2317.when(product1399);
        product1401.setId(1);
        org.mockito.stubbing.Stubber stubber2318 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1402 = stubber2318.when(product1399);
        product1402.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber2319 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1403 = stubber2319.when(product1399);
        product1403.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber2320 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1404 = stubber2320.when(product1399);
        product1404.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber2321 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1405 = stubber2321.when(product1399);
        product1405.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber2322 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1406 = stubber2322.when(product1399);
        product1406.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber2323 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1407 = stubber2323.when(product1399);
        product1407.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber2324 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1408 = stubber2324.when(product1399);
        product1408.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber2325 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1409 = stubber2325.when(product1399);
        product1409.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber2326 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1410 = stubber2326.when(product1399);
        product1410.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber2327 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1411 = stubber2327.when(product1399);
        product1411.setDosage("Much");
        org.mockito.stubbing.Stubber stubber2328 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1412 = stubber2328.when(product1399);
        product1412.setVolume(500);
        org.mockito.stubbing.Stubber stubber2329 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1413 = stubber2329.when(product1399);
        product1413.setWeight(1000);
        org.mockito.stubbing.Stubber stubber2330 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1414 = stubber2330.when(product1399);
        product1414.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber2331 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1415 = stubber2331.when(product1399);
        product1415.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber2332 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1416 = stubber2332.when(product1399);
        product1416.setIsVege(false);
        org.mockito.stubbing.Stubber stubber2333 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1417 = stubber2333.when(product1399);
        product1417.setIsBio(false);
        org.mockito.stubbing.Stubber stubber2334 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1418 = stubber2334.when(product1399);
        product1418.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber2335 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1419 = stubber2335.when(product1399);
        product1419.setPhotoName("");
        org.mockito.stubbing.Stubber stubber2336 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1420 = stubber2336.when(product1399);
        product1420.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber2337 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1421 = stubber2337.when(product1399);
        product1421.setBarcode("");
        org.mockito.stubbing.Stubber stubber2338 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1422 = stubber2338.when(product1399);
        product1422.getName();
        org.mockito.stubbing.Stubber stubber2339 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1423 = stubber2339.when(product1399);
        product1423.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber2340 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1424 = stubber2340.when(product1399);
        product1424.getProductFeatures();
        org.mockito.stubbing.Stubber stubber2341 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1425 = stubber2341.when(product1399);
        product1425.getExpirationDate();
        org.mockito.stubbing.Stubber stubber2342 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1426 = stubber2342.when(product1399);
        product1426.getProductionDate();
        org.mockito.stubbing.Stubber stubber2343 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1427 = stubber2343.when(product1399);
        product1427.getHealingProperties();
        org.mockito.stubbing.Stubber stubber2344 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1428 = stubber2344.when(product1399);
        product1428.getComposition();
        org.mockito.stubbing.Stubber stubber2345 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1429 = stubber2345.when(product1399);
        product1429.getDosage();
        org.mockito.stubbing.Stubber stubber2346 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1430 = stubber2346.when(product1399);
        product1430.getBarcode();
        org.mockito.stubbing.Stubber stubber2347 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1431 = stubber2347.when(product1399);
        product1431.getWeight();
        org.mockito.stubbing.Stubber stubber2348 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1432 = stubber2348.when(product1399);
        product1432.getVolume();
        org.mockito.stubbing.Stubber stubber2349 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1433 = stubber2349.when(product1399);
        product1433.getHasSugar();
        org.mockito.stubbing.Stubber stubber2350 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1434 = stubber2350.when(product1399);
        product1434.getHasSalt();
        org.mockito.stubbing.Stubber stubber2351 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1435 = stubber2351.when(product1399);
        product1435.getIsVege();
        org.mockito.stubbing.Stubber stubber2352 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1436 = stubber2352.when(product1399);
        product1436.getIsBio();
        org.mockito.stubbing.Stubber stubber2353 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1437 = stubber2353.when(product1399);
        product1437.getTaste();
        org.mockito.stubbing.Stubber stubber2354 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1438 = stubber2354.when(product1399);
        product1438.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product1439 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber2355 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1440 = stubber2355.when(product1439);
        product1440 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber2356 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1441 = stubber2356.when(product1439);
        product1441.setId(2);
        org.mockito.stubbing.Stubber stubber2357 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1442 = stubber2357.when(product1439);
        product1442.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber2358 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1443 = stubber2358.when(product1439);
        product1443.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber2359 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1444 = stubber2359.when(product1439);
        product1444.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber2360 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1445 = stubber2360.when(product1439);
        product1445.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber2361 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1446 = stubber2361.when(product1439);
        product1446.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber2362 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1447 = stubber2362.when(product1439);
        product1447.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber2363 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1448 = stubber2363.when(product1439);
        product1448.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber2364 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1449 = stubber2364.when(product1439);
        product1449.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber2365 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1450 = stubber2365.when(product1439);
        product1450.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber2366 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1451 = stubber2366.when(product1439);
        product1451.setDosage("Much");
        org.mockito.stubbing.Stubber stubber2367 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1452 = stubber2367.when(product1439);
        product1452.setVolume(500);
        org.mockito.stubbing.Stubber stubber2368 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1453 = stubber2368.when(product1439);
        product1453.setWeight(1000);
        org.mockito.stubbing.Stubber stubber2369 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1454 = stubber2369.when(product1439);
        product1454.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber2370 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1455 = stubber2370.when(product1439);
        product1455.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber2371 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1456 = stubber2371.when(product1439);
        product1456.setIsVege(false);
        org.mockito.stubbing.Stubber stubber2372 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1457 = stubber2372.when(product1439);
        product1457.setIsBio(false);
        org.mockito.stubbing.Stubber stubber2373 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1458 = stubber2373.when(product1439);
        product1458.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber2374 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1459 = stubber2374.when(product1439);
        product1459.setPhotoName("");
        org.mockito.stubbing.Stubber stubber2375 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1460 = stubber2375.when(product1439);
        product1460.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber2376 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1461 = stubber2376.when(product1439);
        product1461.setBarcode("");
        org.mockito.stubbing.Stubber stubber2377 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1462 = stubber2377.when(product1439);
        product1462.getName();
        org.mockito.stubbing.Stubber stubber2378 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1463 = stubber2378.when(product1439);
        product1463.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber2379 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1464 = stubber2379.when(product1439);
        product1464.getProductFeatures();
        org.mockito.stubbing.Stubber stubber2380 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1465 = stubber2380.when(product1439);
        product1465.getExpirationDate();
        org.mockito.stubbing.Stubber stubber2381 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1466 = stubber2381.when(product1439);
        product1466.getProductionDate();
        org.mockito.stubbing.Stubber stubber2382 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1467 = stubber2382.when(product1439);
        product1467.getHealingProperties();
        org.mockito.stubbing.Stubber stubber2383 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1468 = stubber2383.when(product1439);
        product1468.getComposition();
        org.mockito.stubbing.Stubber stubber2384 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1469 = stubber2384.when(product1439);
        product1469.getDosage();
        org.mockito.stubbing.Stubber stubber2385 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1470 = stubber2385.when(product1439);
        product1470.getBarcode();
        org.mockito.stubbing.Stubber stubber2386 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1471 = stubber2386.when(product1439);
        product1471.getWeight();
        org.mockito.stubbing.Stubber stubber2387 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1472 = stubber2387.when(product1439);
        product1472.getVolume();
        org.mockito.stubbing.Stubber stubber2388 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1473 = stubber2388.when(product1439);
        product1473.getHasSugar();
        org.mockito.stubbing.Stubber stubber2389 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1474 = stubber2389.when(product1439);
        product1474.getHasSalt();
        org.mockito.stubbing.Stubber stubber2390 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1475 = stubber2390.when(product1439);
        product1475.getIsVege();
        org.mockito.stubbing.Stubber stubber2391 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1476 = stubber2391.when(product1439);
        product1476.getIsBio();
        org.mockito.stubbing.Stubber stubber2392 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1477 = stubber2392.when(product1439);
        product1477.getTaste();
        org.mockito.stubbing.Stubber stubber2393 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1478 = stubber2393.when(product1439);
        product1478.getStorageLocation();
        com.hermanowicz.pantry.db.product.Product product1479 = org.mockito.Mockito.mock(com.hermanowicz.pantry.db.product.Product.class);
        org.mockito.stubbing.Stubber stubber2394 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1480 = stubber2394.when(product1479);
        product1480 = new com.hermanowicz.pantry.db.product.Product();
        org.mockito.stubbing.Stubber stubber2395 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1481 = stubber2395.when(product1479);
        product1481.setId(5);
        org.mockito.stubbing.Stubber stubber2396 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1482 = stubber2396.when(product1479);
        product1482.setName("Raspberry juice");
        org.mockito.stubbing.Stubber stubber2397 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1483 = stubber2397.when(product1479);
        product1483.setHashCode("168177850");
        org.mockito.stubbing.Stubber stubber2398 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1484 = stubber2398.when(product1479);
        product1484.setTypeOfProduct("Vegetables");
        org.mockito.stubbing.Stubber stubber2399 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1485 = stubber2399.when(product1479);
        product1485.setProductFeatures("null");
        org.mockito.stubbing.Stubber stubber2400 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1486 = stubber2400.when(product1479);
        product1486.setStorageLocation("");
        org.mockito.stubbing.Stubber stubber2401 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1487 = stubber2401.when(product1479);
        product1487.setExpirationDate("-");
        org.mockito.stubbing.Stubber stubber2402 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1488 = stubber2402.when(product1479);
        product1488.setProductionDate("-");
        org.mockito.stubbing.Stubber stubber2403 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1489 = stubber2403.when(product1479);
        product1489.setComposition("Raspberries");
        org.mockito.stubbing.Stubber stubber2404 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1490 = stubber2404.when(product1479);
        product1490.setHealingProperties("");
        org.mockito.stubbing.Stubber stubber2405 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1491 = stubber2405.when(product1479);
        product1491.setDosage("Much");
        org.mockito.stubbing.Stubber stubber2406 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1492 = stubber2406.when(product1479);
        product1492.setVolume(500);
        org.mockito.stubbing.Stubber stubber2407 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1493 = stubber2407.when(product1479);
        product1493.setWeight(1000);
        org.mockito.stubbing.Stubber stubber2408 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1494 = stubber2408.when(product1479);
        product1494.setHasSugar(false);
        org.mockito.stubbing.Stubber stubber2409 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1495 = stubber2409.when(product1479);
        product1495.setHasSalt(false);
        org.mockito.stubbing.Stubber stubber2410 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1496 = stubber2410.when(product1479);
        product1496.setIsVege(false);
        org.mockito.stubbing.Stubber stubber2411 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1497 = stubber2411.when(product1479);
        product1497.setIsBio(false);
        org.mockito.stubbing.Stubber stubber2412 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1498 = stubber2412.when(product1479);
        product1498.setTaste("Sweet");
        org.mockito.stubbing.Stubber stubber2413 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1499 = stubber2413.when(product1479);
        product1499.setPhotoName("");
        org.mockito.stubbing.Stubber stubber2414 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1500 = stubber2414.when(product1479);
        product1500.setPhotoDescription("");
        org.mockito.stubbing.Stubber stubber2415 = org.mockito.Mockito.doNothing();
        com.hermanowicz.pantry.db.product.Product product1501 = stubber2415.when(product1479);
        product1501.setBarcode("");
        org.mockito.stubbing.Stubber stubber2416 = org.mockito.Mockito.doReturn("Raspberry juice");
        com.hermanowicz.pantry.db.product.Product product1502 = stubber2416.when(product1479);
        product1502.getName();
        org.mockito.stubbing.Stubber stubber2417 = org.mockito.Mockito.doReturn("Vegetables");
        com.hermanowicz.pantry.db.product.Product product1503 = stubber2417.when(product1479);
        product1503.getTypeOfProduct();
        org.mockito.stubbing.Stubber stubber2418 = org.mockito.Mockito.doReturn("null");
        com.hermanowicz.pantry.db.product.Product product1504 = stubber2418.when(product1479);
        product1504.getProductFeatures();
        org.mockito.stubbing.Stubber stubber2419 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1505 = stubber2419.when(product1479);
        product1505.getExpirationDate();
        org.mockito.stubbing.Stubber stubber2420 = org.mockito.Mockito.doReturn("-");
        com.hermanowicz.pantry.db.product.Product product1506 = stubber2420.when(product1479);
        product1506.getProductionDate();
        org.mockito.stubbing.Stubber stubber2421 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1507 = stubber2421.when(product1479);
        product1507.getHealingProperties();
        org.mockito.stubbing.Stubber stubber2422 = org.mockito.Mockito.doReturn("Raspberries");
        com.hermanowicz.pantry.db.product.Product product1508 = stubber2422.when(product1479);
        product1508.getComposition();
        org.mockito.stubbing.Stubber stubber2423 = org.mockito.Mockito.doReturn("Much");
        com.hermanowicz.pantry.db.product.Product product1509 = stubber2423.when(product1479);
        product1509.getDosage();
        org.mockito.stubbing.Stubber stubber2424 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1510 = stubber2424.when(product1479);
        product1510.getBarcode();
        org.mockito.stubbing.Stubber stubber2425 = org.mockito.Mockito.doReturn(1000);
        com.hermanowicz.pantry.db.product.Product product1511 = stubber2425.when(product1479);
        product1511.getWeight();
        org.mockito.stubbing.Stubber stubber2426 = org.mockito.Mockito.doReturn(500);
        com.hermanowicz.pantry.db.product.Product product1512 = stubber2426.when(product1479);
        product1512.getVolume();
        org.mockito.stubbing.Stubber stubber2427 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1513 = stubber2427.when(product1479);
        product1513.getHasSugar();
        org.mockito.stubbing.Stubber stubber2428 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1514 = stubber2428.when(product1479);
        product1514.getHasSalt();
        org.mockito.stubbing.Stubber stubber2429 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1515 = stubber2429.when(product1479);
        product1515.getIsVege();
        org.mockito.stubbing.Stubber stubber2430 = org.mockito.Mockito.doReturn(false);
        com.hermanowicz.pantry.db.product.Product product1516 = stubber2430.when(product1479);
        product1516.getIsBio();
        org.mockito.stubbing.Stubber stubber2431 = org.mockito.Mockito.doReturn("Sweet");
        com.hermanowicz.pantry.db.product.Product product1517 = stubber2431.when(product1479);
        product1517.getTaste();
        org.mockito.stubbing.Stubber stubber2432 = org.mockito.Mockito.doReturn("");
        com.hermanowicz.pantry.db.product.Product product1518 = stubber2432.when(product1479);
        product1518.getStorageLocation();
        java.util.ArrayList arraylist95 = org.mockito.Mockito.mock(java.util.ArrayList.class);
        org.mockito.stubbing.Stubber stubber2433 = org.mockito.Mockito.doNothing();
        java.util.ArrayList arraylist96 = stubber2433.when(arraylist95);
        arraylist96 = new java.util.ArrayList(0);
        org.mockito.stubbing.Stubber stubber2434 = org.mockito.Mockito.doReturn(0);
        java.util.ArrayList arraylist97 = stubber2434.when(arraylist95);
        arraylist97.size();
        java.util.ArrayList arraylist98 = org.mockito.Mockito.mock(java.util.ArrayList.class);
        org.mockito.stubbing.Stubber stubber2435 = org.mockito.Mockito.doNothing();
        java.util.ArrayList arraylist99 = stubber2435.when(arraylist98);
        arraylist99 = new java.util.ArrayList();
        org.mockito.stubbing.Stubber stubber2436 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist100 = stubber2436.when(arraylist98);
        arraylist100.add(product1438);
        org.mockito.stubbing.Stubber stubber2437 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist101 = stubber2437.when(arraylist98);
        arraylist101.add(product1478);
        org.mockito.stubbing.Stubber stubber2438 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist102 = stubber2438.when(arraylist98);
        arraylist102.add(product1358);
        org.mockito.stubbing.Stubber stubber2439 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist103 = stubber2439.when(arraylist98);
        arraylist103.add(product1398);
        org.mockito.stubbing.Stubber stubber2440 = org.mockito.Mockito.doReturn(true);
        java.util.ArrayList arraylist104 = stubber2440.when(arraylist98);
        arraylist104.add(product1518);
        org.mockito.stubbing.Stubber stubber2441 = org.mockito.Mockito.doReturn(iterator9);
        java.util.ArrayList arraylist105 = stubber2441.when(arraylist98);
        arraylist105.iterator();
        org.mockito.stubbing.Stubber stubber2442 = org.mockito.Mockito.doReturn(iterator10);
        java.util.ArrayList arraylist106 = stubber2442.when(arraylist98);
        arraylist106.iterator();
        org.mockito.stubbing.Stubber stubber2443 = org.mockito.Mockito.doReturn(iterator11);
        java.util.ArrayList arraylist107 = stubber2443.when(arraylist98);
        arraylist107.iterator();
        org.mockito.stubbing.Stubber stubber2444 = org.mockito.Mockito.doReturn(iterator8);
        java.util.ArrayList arraylist108 = stubber2444.when(arraylist98);
        arraylist108.iterator();
        androidx.appcompat.widget.AppCompatButton appcompatbutton12 = org.mockito.Mockito.mock(androidx.appcompat.widget.AppCompatButton.class);
        org.mockito.stubbing.Stubber stubber2445 = org.mockito.Mockito.doNothing();
        androidx.appcompat.widget.AppCompatButton appcompatbutton13 = stubber2445.when(appcompatbutton12);
        appcompatbutton13.setOnClickListener(object44);
        org.robolectric.android.controller.ActivityController activitycontroller81 = org.robolectric.Robolectric.buildActivity(com.hermanowicz.pantry.activity.NewProductActivity.class, intent28);
        com.hermanowicz.pantry.activity.NewProductActivity newproductactivity36 = (com.hermanowicz.pantry.activity.NewProductActivity) activitycontroller81.get();
        org.robolectric.android.controller.ActivityController activitycontroller82 = activitycontroller81.create();
        org.robolectric.android.controller.ActivityController activitycontroller83 = activitycontroller82.resume();
        org.robolectric.android.controller.ActivityController activitycontroller84 = activitycontroller83.visible();
        newproductactivity36.lambda$setListeners$0$com-hermanowicz-pantry-activity-NewProductActivity(appcompatbutton13);
        org.robolectric.android.controller.ActivityController activitycontroller85 = activitycontroller84.pause();
        arraylist97.size();
        arraylist108.iterator();
        arraylist108.iterator();
        arraylist108.iterator();
        arraylist108.iterator();
        newproductactivity36.finish();
        activitycontroller85.destroy();
    }
}

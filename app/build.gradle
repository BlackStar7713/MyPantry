/*
 * Copyright (c) 2019-2022
 * Mateusz Hermanowicz - All rights reserved.
 * My Pantry
 * https://www.mypantry.eu
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

// Load Jacoco Only if needed
if (jacocoEnabled.toBoolean()) {
    project.logger.lifecycle('Applying jacoco build file: jacoco.gradle')
    apply from: rootProject.file("jacoco.gradle")
}

// General switch for tests types this control report generation but not yet unit test selection - TODO Make this a flag
def carvedTests = project.hasProperty('carvedTests')// ? project.getProperty('carvedTests') : false //Default value false

def carvedTestSrcDir = "src/carvedTest"
def testReportPrefix = "${buildDir}/carvedTest/testExecution"
def coverageReportPrefix = "${buildDir}/carvedTest/coverage"

if (carvedTests) {
    if (project.hasProperty('testName')) {
        def testName = project.getProperty('testName')
        println ""
        println "* Processing Carved Test ${testName}"
        println ""

        carvedTestSrcDir = "src/carvedTest/${testName}"

        testReportPrefix = "${buildDir}/carvedTest/${testName}/testExecution"
        coverageReportPrefix = "${buildDir}/carvedTest/${testName}/coverage"
    }
}

android {

    // Change the src folder for carved tests
    sourceSets {
        test {
            if (carvedTests) {
                java.srcDirs = ["$carvedTestSrcDir"]
            }
        }
    }

    compileSdkVersion 32
    buildToolsVersion '30.0.3'
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    defaultConfig {
        applicationId "com.hermanowicz.pantry"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 59
        versionName "2.1.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions.unitTests.includeAndroidResources = true
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        testOptions {
            unitTests.all {
                jvmArgs "-Xmx2g"

                // Nices output on the console/logs
                testLogging {
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                    outputs.upToDateWhen { false }
                    showStandardStreams = true
                }

                test {
                    //Get last path of default set path.
                    def junitXmlTestTaskName = file("$reports.junitXml.destination").name
                    def htmlTestTaskName = file("$reports.html.destination").name

                    if (carvedTests) {
                        // Just use the same?
                        reports.junitXml.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                        reports.html.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                    }

                    filter {
                        //specific test method
                        if (project.hasProperty('carvedTestsFilter')){
                            includeTestsMatching project.carvedTestsFilter
                        }
                    }
                }
            }

            animationsDisabled true
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled jacocoEnabled.toBoolean()
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/INDEX.LIST']
        }
    }
    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }
    lint {
        checkReleaseBuilds false
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation platform('com.google.firebase:firebase-bom:27.1.0')
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.core:core:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.room:room-runtime:2.4.2'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.material:material:1.5.0'
    //implementation 'com.google.android.gms:play-services-ads:20.6.0'
    implementation 'com.google.firebase:firebase-analytics:20.1.1'
    implementation 'com.google.firebase:firebase-core:20.1.1'
    implementation 'com.google.firebase:firebase-firestore:24.0.2'
    //implementation 'com.google.firebase:firebase-ads:20.6.0'
    implementation 'com.google.firebase:firebase-messaging:23.0.2'
    implementation 'com.google.firebase:firebase-auth:21.0.2'
    implementation 'com.google.firebase:firebase-database:20.0.4'
    implementation 'com.firebaseui:firebase-ui-auth:8.0.0'
    implementation 'com.android.billingclient:billing:4.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.google.zxing:javase:3.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.3'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.4.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.github.hajiyevelnur92:intentanimation:1.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'
    implementation 'com.github.rafi0101:Android-Room-Database-Backup:1.0.0-beta06'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:2.4.1"
    implementation 'io.reactivex.rxjava3:rxjava:3.1.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation "androidx.lifecycle:lifecycle-livedata:2.4.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.4.1"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.room:room-testing:2.3.0'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.mockito:mockito-all:2.0.2-beta'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.4.0') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    annotationProcessor 'androidx.room:room-compiler:2.4.2'
}
